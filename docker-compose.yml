version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: fstestpass
      POSTGRES_DB: fs_test_221124
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  fs_test_221124_ng:
    image: fs_test_221124_ng
    container_name: fs_test_221124_ng
    env_file:
      - .env_ng
    networks:
      - app-network
    ports:
      - "9000:9000"

  fs_test_221124_monolith:
    image: fs_test_221124_monolith
    container_name: fs_test_221124_monolith
    env_file:
      - .env_monolith
    depends_on:
      - postgres
    networks:
      - app-network
    ports:
      - "9001:9001"

  monolith_tests:
    image: fs_test_221124_monolith  # Reuse the monolith image for testing
    container_name: monolith_tests
    env_file:
      - .env_monolith
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - coverage_report:/app/coverage  # Persist coverage report
    entrypoint: sh
    command: >
      -c "
      pytest --maxfail=10 -p no:warnings --cov=/app/src --cov-report=html:/app/coverage &&
      python -m http.server --directory /app/coverage 10001
      "
    ports:
      - "10001:10001"  # Serve coverage report via HTTP


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  coverage_report:
    driver: local
